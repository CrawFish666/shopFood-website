name: build + deploy NodeJS with Webpack

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source
      
    strategy:
      matrix:
        node-version: [18.x]

    steps:
    - uses: actions/checkout@v3

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        
    - name: cache node_modules
      uses: actions/cache@v3
      id: build-webpack-persistent-cache
      with:
        path: |
          **/node_modules
        key: node-modules-${{ hashFiles('**/package-lock.json') }}
      
    - name: install modules
      run: npm install
      
    
    - name: Set env
      run: |
          touch .env
          echo SERVER_URL=${{secrets.SERVER_URL}} >> .env
          cat .env
      
    - name: build project
      run: npm run build
      env:
        SERVER_URL: ${{secrets.SERVER_URL}}

    - name: upload-pages-artifact
      uses: actions/upload-pages-artifact@v2
      with:
        path: dist/
  deploy:
    # Add a dependency to the build job
    needs: build

    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2.0.4 # or the latest "vX.X.X" version tag for this action

